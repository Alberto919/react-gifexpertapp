{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFechGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFechGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcF,OACE,sBAAMC,SATe,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAKtB,SACM,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAjBgB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCRlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDAEyBC,UAAWH,GAFpC,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATnB,kBAaZM,GAbY,4CAAH,sDCEPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEnC,OACE,sBAAKc,UAAU,yCAAf,UACE,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCHGO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAExB,ECHyB,SAACA,GAC1B,MAA0Bd,mBAAS,CACjCqB,KAAM,GACNa,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAgBA,OAXAC,qBAAU,WACNxB,EAAQC,GAAUwB,MAAK,SAACC,GAExBH,EAAS,CACPf,KAAMkB,EACNL,SAAS,SAIZ,CAACpB,IAEGqB,EDd2BK,CAAY1B,GAAhCa,EAAd,EAAQN,KAAca,EAAtB,EAAsBA,QAEtB,OACE,qCACE,oBAAIJ,UAAU,oCAAd,SAAmDhB,IACjDoB,GAAW,mBAAGJ,UAAU,mCAAb,wBACb,qBAAKA,UAAU,YAAf,SACGH,EAAOJ,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEejBgB,EAzBM,WAEnB,MAAoCzC,mBAAS,CAAE,gBAA/C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAGA,OACE,qCACM,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAChC,uBAEA,6BAEI2C,EAAWnB,KAAI,SAACT,GAAD,OACb,cAAC,EAAD,CAEEA,SAAUA,GADLA,Y,MCbnB6B,IAASC,OACR,cAAC,EAAD,IACCC,SAASC,eAAe,W","file":"static/js/main.fa231492.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setinputValue] = useState('');\r\n    \r\n    const handleInputChange = (e) => {\r\n        setinputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories(cats => [inputValue, ...cats]);\r\n            setinputValue('');\r\n        }\r\n    }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n          <input\r\n              type=\"text\"\r\n              value={inputValue}\r\n              onChange={handleInputChange}\r\n          />\r\n    </form>\r\n  );\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n}\r\n","export const getGifs = async (category) => {\r\n    const url =\r\n      `https://api.giphy.com/v1/gifs/search?q=${encodeURI( category )}&limit=10&api_key=5hclQR5yn4sZdNW1IkYTtE43uJ12TI2b`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n    const gifs = data.map((img) => {\r\n      return {\r\n        id: img.id,\r\n        title: img.title,\r\n        url: img.images?.downsized_medium.url,\r\n      };\r\n    });\r\n\r\n    return gifs;\r\n  };\r\n","import React from \"react\";\r\n\r\nexport const GifGridItem = ({ title, url }) => {\r\n\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeIn\">\r\n      <img src={url} alt={title} />\r\n      <p>{title}</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useFechGifs } from '../hooks/useFechGifs'\r\nimport { GifGridItem } from \"./GifGridItem\";\r\n\r\nexport const GifGrid = ({ category }) => {\r\n//   const [images, setImages] = useState([]);\r\n  const { data: images, loading } = useFechGifs(category);\r\n    \r\n  return (\r\n    <>\r\n      <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n      { loading && <p className=\"animate__animated animate__flash\">Loading...</p> }\r\n      <div className=\"card-grid\">\r\n        {images.map((img) => (\r\n          <GifGridItem key={img.id} {...img} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFechGifs = (category) => {\r\n  const [state, setstate] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n      getGifs(category).then((imgs) => {\r\n        \r\n      setstate({\r\n        data: imgs,\r\n        loading: false,\r\n      });\r\n          \r\n    });\r\n  }, [category]);\r\n\r\n  return state; // { data:[], loading:true }\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\nconst GifExpertApp = () => {\r\n\r\n  const [categories, setCategories] = useState([ \"Dragon Ball\" ]);\r\n\r\n\r\n  return (\r\n    <>\r\n          <h2>GifExpertApp</h2>\r\n          <AddCategory setCategories={setCategories}/>\r\n      <hr />\r\n      \r\n      <ol>\r\n        {\r\n          categories.map((category) => (\r\n            <GifGrid\r\n              key={category}\r\n              category={category}\r\n            />\r\n          ))\r\n        }\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}